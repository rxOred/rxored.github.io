<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cpp on rxOred&#39;s blog</title>
    <link>https://rxOred.github.io/tags/cpp/</link>
    <description>Recent content in cpp on rxOred&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 01 Jan 2022 10:21:31 +0000</lastBuildDate><atom:link href="https://rxOred.github.io/tags/cpp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Process Hollowing? not really</title>
      <link>https://rxOred.github.io/post/malware/process-hollowing/process-hollowing/</link>
      <pubDate>Sat, 01 Jan 2022 10:21:31 +0000</pubDate>
      
      <guid>https://rxOred.github.io/post/malware/process-hollowing/process-hollowing/</guid>
      <description>(@bound by jademerien)
Table of Content  Introduction The problem The solution  Basics Implementation Achieving more stealth   References The end  Introduction Process hollowing is a code injection / evasion technique that is often used in malware.
Process hollowing technique works by hollowing out a legitimate process image and replacing it with malicous code.
A malware that uses process hollowing starts a target ** process with CREATE_SUSPENDED flag enabled.</description>
    </item>
    
    <item>
      <title>Reverse engineering Linkeds lists</title>
      <link>https://rxOred.github.io/post/reverse-linked-lists/reverse-linked-lists/</link>
      <pubDate>Sun, 03 Oct 2021 00:49:28 +0000</pubDate>
      
      <guid>https://rxOred.github.io/post/reverse-linked-lists/reverse-linked-lists/</guid>
      <description>Oh hi. Personally, I&amp;rsquo;m not a big fan of competitive programming. Anyhow, I wanted to test my DSA skills so i started doing leetcode a week(or two ig)ago. And I spent an entire day solving some of those challenges. Eventually I came cross a medium level challege, named Reorder List. problem is pretty simple, you are given a head node of a linked list, what you have to do is kinda shuffle nodes around.</description>
    </item>
    
  </channel>
</rss>
