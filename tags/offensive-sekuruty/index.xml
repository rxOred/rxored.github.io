<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>offensive-sekuruty on rxOred&#39;s blog</title>
    <link>https://rxOred.github.io/tags/offensive-sekuruty/</link>
    <description>Recent content in offensive-sekuruty on rxOred&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 Oct 2021 14:20:04 +0000</lastBuildDate><atom:link href="https://rxOred.github.io/tags/offensive-sekuruty/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>From AMSI to Reflection 0x0</title>
      <link>https://rxOred.github.io/post/csharploader/bypassing-amsi-with-csharp/</link>
      <pubDate>Sat, 23 Oct 2021 14:20:04 +0000</pubDate>
      
      <guid>https://rxOred.github.io/post/csharploader/bypassing-amsi-with-csharp/</guid>
      <description>Table of Content  Introduction Antimalware Scan Interface  AMSI in action   AMSI internals  AmsiScanString AmsiScanBuffer CAmsiAntimalware::Scan AmsiInitialize   The End  Introduction In Windows environments, in both initial access and post-exploitation phases, script-based malware plays a major role. Often, hackers utilize microsoft office suite to gain initial access (using droppers, loaders) to the victim and Windows powershell to explore internal network, perform scans&amp;hellip; basically to do the post exploitation stuff.</description>
    </item>
    
  </channel>
</rss>
